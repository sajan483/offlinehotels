import { __decorate, __param } from 'tslib';
import { Injectable, Inject, NgModule } from '@angular/core';
import { NavigationEnd, Router } from '@angular/router';

function _window() {
    return window;
}
var WindowRef = /** @class */ (function () {
    function WindowRef() {
    }
    Object.defineProperty(WindowRef.prototype, "nativeWindow", {
        get: function () {
            return _window();
        },
        enumerable: true,
        configurable: true
    });
    WindowRef = __decorate([
        Injectable()
    ], WindowRef);
    return WindowRef;
}());
var BackButtonDisableModule = /** @class */ (function () {
    function BackButtonDisableModule(router, windowRef, preserveScrollPosition) {
        this.router = router;
        this.windowRef = windowRef;
        this.preserveScrollPosition = preserveScrollPosition;
        this.scrollX = 0;
        this.scrollY = 0;
        this.window = this.windowRef.nativeWindow;
        this.disableBackButton();
        this.addPopStateEventListener();
    }
    BackButtonDisableModule_1 = BackButtonDisableModule;
    BackButtonDisableModule.forRoot = function (config) {
        return {
            ngModule: BackButtonDisableModule_1,
            providers: [
                {
                    provide: 'preserveScrollPosition',
                    useValue: config && 'preserveScrollPosition' in config ? config.preserveScrollPosition : false
                }
            ]
        };
    };
    BackButtonDisableModule.prototype.addPopStateEventListener = function () {
        var _this = this;
        this.window.addEventListener('popstate', function () {
            if (_this.preserveScrollPosition)
                _this.getScrollCoordinates();
            _this.window.history.pushState(null, null, null);
            if (_this.preserveScrollPosition)
                setTimeout(_this.scrollToThePreviousPosition.bind(_this));
        });
    };
    BackButtonDisableModule.prototype.scrollToThePreviousPosition = function () {
        this.window.scrollTo(this.scrollX, this.scrollY);
    };
    BackButtonDisableModule.prototype.getScrollCoordinates = function () {
        this.scrollX = this.window.scrollX;
        this.scrollY = this.window.scrollY;
    };
    BackButtonDisableModule.prototype.disableBackButton = function () {
        var _this = this;
        this.window.history.pushState(null, null, null);
        this.router.events.subscribe(function (event) {
            if (event instanceof NavigationEnd) {
                _this.window.history.pushState(null, null, null);
            }
            ;
        });
    };
    var BackButtonDisableModule_1;
    BackButtonDisableModule.ctorParameters = function () { return [
        { type: Router },
        { type: WindowRef },
        { type: Boolean, decorators: [{ type: Inject, args: ['preserveScrollPosition',] }] }
    ]; };
    BackButtonDisableModule = BackButtonDisableModule_1 = __decorate([
        NgModule({
            providers: [WindowRef]
        }),
        __param(2, Inject('preserveScrollPosition'))
    ], BackButtonDisableModule);
    return BackButtonDisableModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { BackButtonDisableModule, WindowRef };
//# sourceMappingURL=angular-disable-browser-back-button.js.map
