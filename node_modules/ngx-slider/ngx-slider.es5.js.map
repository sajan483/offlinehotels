{"version":3,"file":"ngx-slider.es5.js","sources":["ts/ngx-slider.ts","ts/src/app/slider/class/slider.ts","ts/src/app/slider/class/config.ts","ts/src/app/slider/slider.module.ts","ts/src/app/slider/slider.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Slider,SliderModule} from './public_api';\n\nexport {SliderComponent as Éµa} from './src/app/slider/slider.component';","import { ISlide } from '../interface/slide';\nimport { ISliderConfig } from '../interface/slider-config';\nimport { Slide } from './slide';\nimport { SliderConfig } from './config';\nexport class Slider {\n    items: Array<ISlide> = [];\n    config: ISliderConfig = new SliderConfig();\nconstructor() {}\n}\n\nfunction Slider_tsickle_Closure_declarations() {\n/** @type {?} */\nSlider.prototype.items;\n/** @type {?} */\nSlider.prototype.config;\n}\n\n\n","\nexport class SliderConfig {\n    showDots: boolean;\n    showNavigator: boolean;\n    showTitle: boolean;\n    loop: boolean;\n    showPreview: boolean;\n    numberOfPreview: number;\n    previewWidth: number;\n    transitionDuration: number;\nconstructor() {\n        this.showDots = true;\n        this.showNavigator = true;\n        this.showTitle = true;\n        this.loop = true;\n        this.showPreview = true;\n        this.numberOfPreview = 2;\n        this.previewWidth = 50;\n        this.transitionDuration = 1;\n    }\n}\n\nfunction SliderConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderConfig.prototype.showDots;\n/** @type {?} */\nSliderConfig.prototype.showNavigator;\n/** @type {?} */\nSliderConfig.prototype.showTitle;\n/** @type {?} */\nSliderConfig.prototype.loop;\n/** @type {?} */\nSliderConfig.prototype.showPreview;\n/** @type {?} */\nSliderConfig.prototype.numberOfPreview;\n/** @type {?} */\nSliderConfig.prototype.previewWidth;\n/** @type {?} */\nSliderConfig.prototype.transitionDuration;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SliderComponent } from './slider.component';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SliderComponent\n  ],\n  exports: [\n    SliderComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, HostListener, ElementRef } from '@angular/core';\nimport { Slider } from './class/slider';\nimport { ISliderConfig } from './interface/slider-config';\nimport { ISlide } from './interface/slide';\nexport class SliderComponent implements OnInit {\n\n   init: Slider;\npublic sliderItems: Array<ISlide>;\npublic config: ISliderConfig;\npublic componentWidth: number;\npublic currentItemIndex: number;\npublic activeTitle: string;\npublic sliderStyle: any;\npublic slideStyle: any;\n/**\n * @param {?} el\n */\nconstructor(\npublic el: ElementRef\n  ) {\n    this.currentItemIndex = 0;\n    this.activeTitle = '';\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.sliderItems = this.init.items;\n    this.config = this.init.config;\n    this.setTitle();\n    this.resize();\n    this.setSliderStyle();\n  }\n/**\n * @return {?}\n */\nonResize() {\n    this.resize();\n  }\n/**\n * @return {?}\n */\nprivate resize() {\n    this.componentWidth = this.el.nativeElement.parentElement.clientWidth - (this.getPreviewWidth() * this.getNumberOfPreview());\n    this.setSlideStyle();\n  }\n/**\n * @return {?}\n */\nprivate setSliderStyle(): void {\n    const /** @type {?} */ width = `${this.getWrapperWidth()}px`;\n    const /** @type {?} */ left = this.getWrapperLeft() ? `-${this.getWrapperLeft() - this.getPreviewWidth()}px` : 0;\n\n    this.sliderStyle = {\n      width: width,\n      left: left,\n      transition: `left ${this.config.transitionDuration}s`\n    };\n  }\n/**\n * @return {?}\n */\nprivate setSlideStyle(): void {\n    this.slideStyle = {\n      width: `${this.componentWidth}px`\n    };\n  }\n/**\n * @return {?}\n */\nprivate setTitle(): void {\n    this.activeTitle =\n      this.sliderItems.length ? this.sliderItems[this.currentItemIndex].title : '';\n  }\n/**\n * @return {?}\n */\nprivate getNumberOfPreview(): number {\n    return this.config.showPreview ? this.config.numberOfPreview : 0;\n  }\n/**\n * @return {?}\n */\nprivate getPreviewWidth(): number {\n    return this.config.showPreview ? this.config.previewWidth : 0;\n  }\n/**\n * @return {?}\n */\nprivate getWrapperWidth(): number {\n    return this.sliderItems.length ? this.sliderItems.length * this.componentWidth : this.componentWidth;\n  }\n/**\n * @return {?}\n */\nprivate getWrapperLeft(): number {\n    return this.currentItemIndex * this.componentWidth;\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nprivate goTo(action: any): void {\n    if (action === 'next') {\n      if (this.sliderItems.length - 1 > this.currentItemIndex) {\n        this.currentItemIndex++;\n      } else {\n        this.currentItemIndex = this.config.loop ? 0 : this.currentItemIndex;\n      }\n    } else if (action === 'previous') {\n      if (this.currentItemIndex > 0) {\n        this.currentItemIndex--;\n      } else {\n        this.currentItemIndex = this.config.loop ? this.sliderItems.length - 1 : this.currentItemIndex;\n      }\n    } else {\n      this.currentItemIndex = action;\n    }\n    this.setSliderStyle();\n    this.setTitle();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-slider',\n  template: `\n    <h4 *ngIf=\"config.showTitle\" class=\"slide-title\" [innerHTML]=\"activeTitle\"></h4>\n    <div class=\"slider-container\">\n      <div class=\"slider-row\">\n        <div [ngStyle]=\"sliderStyle\" class=\"slide-wrapper\">\n          <div *ngFor=\"let slide of sliderItems; let i=index;\" \n               [class.active]=\"i === currentItemIndex\"\n               [ngStyle]=\"slideStyle\" \n               class=\"slide-item\">\n               <div [ngStyle]=\"{'background-image': 'url(' + slide.src + ')'}\" class=\"slide\"></div>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf=\"sliderItems.length > 1 && config.showNavigator\">\n          <button (click)=\"goTo('next')\" class=\"slider-nav next\">\n              <i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>\n            </button>\n            <button (click)=\"goTo('previous')\" class=\"slider-nav previous\">\n              <i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i>\n            </button>\n      </ng-container>\n      <div *ngIf=\"sliderItems.length > 1 && config.showDots\" class=\"slider-dots\">\n        <ul>\n          <li *ngFor=\"let slide of sliderItems; let i=index;\" [class.active]=\"i === currentItemIndex\">\n            <button (click)=\"goTo(i)\" class=\"dots\">\n              <i class=\"fa fa-circle\" aria-hidden=\"true\"></i>\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .slider-container {\n        width: 100%;\n        height: 100%;\n        position: relative;\n        overflow: hidden;\n    }\n    .slider-row {\n        width: 100%;\n        height: 100%;\n    }\n    .slide-wrapper {\n        position: absolute;\n        height: 100%;\n    }\n    .slide-wrapper .active {\n        opacity: 1;\n        -webkit-transition: opacity 1s, -webkit-transform 1s;\n        transition: opacity 1s, -webkit-transform 1s;\n        transition: opacity 1s, transform 1s;\n        transition: opacity 1s, transform 1s, -webkit-transform 1s;\n    }\n    .slide-item {\n        display: inline-block;\n        height: 100%;\n        opacity: 0.5;\n        -webkit-transition: opacity 1s, -webkit-transform 1s;\n        transition: opacity 1s, -webkit-transform 1s;\n        transition: opacity 1s, transform 1s;\n        transition: opacity 1s, transform 1s, -webkit-transform 1s;\n    }\n    .slide {\n        height: 100%;\n        background-repeat: no-repeat;\n        background-size: auto;\n        background-position: center;\n        margin: 0 5px;\n    }\n    .slide-title {\n        font-size: 1.5rem;\n        padding: 10px;\n    }\n    .slider-nav {\n        background-color: rgba(0,0,0,0.2);\n        position: absolute;\n        top: 35%;\n        border: none;\n        -webkit-box-shadow: none;\n                box-shadow: none;\n        color: white;\n        font-size: 2rem;\n        padding: 1.5rem;\n    }\n\n    .next {\n        right: 0;\n    }\n\n    .previous {\n        left: 0;\n    }\n\n    .slider-dots {\n        position: absolute;\n        bottom: 3%;\n        width: 100%;\n        text-align: center;\n    }\n\n    .slider-dots ul {\n        margin: 0;\n        padding: 0;\n    }\n\n    .slider-dots ul li {\n        display: inline-block;\n        list-style: none;\n        margin: 0 3px;\n    } \n\n    .slider-dots ul li.active i {\n        color: #00C24F;\n    }\n\n    .dots {\n        padding: 0;\n        border: 0;\n        -webkit-box-shadow: none;\n                box-shadow: none;\n        background: none;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'init': [{ type: Input },],\n'onResize': [{ type: HostListener, args: ['window:resize', ['$event.target'], ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.init;\n/** @type {?} */\nSliderComponent.prototype.sliderItems;\n/** @type {?} */\nSliderComponent.prototype.config;\n/** @type {?} */\nSliderComponent.prototype.componentWidth;\n/** @type {?} */\nSliderComponent.prototype.currentItemIndex;\n/** @type {?} */\nSliderComponent.prototype.activeTitle;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.slideStyle;\n/** @type {?} */\nSliderComponent.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}
